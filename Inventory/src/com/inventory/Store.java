
package com.inventory;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.table.DefaultTableModel;
import javax.swing.JPanel;
import java.awt.Color;
import java.awt.Font;
import java.awt.Toolkit;

import javax.swing.JLabel;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

/**
 *
 * @author Rahemet
 */
public class Store extends javax.swing.JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	/**
	 * Creates new form View
	 */
	public Store() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */

	private void initComponents() {

		jScrollPane1 = new javax.swing.JScrollPane();
		jScrollPane1.setBounds(436, 90, 493, 396);
		Table = new javax.swing.JTable();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("Mobile Store Application");
		setPreferredSize(new java.awt.Dimension(1000, 550));

		Table.setModel(
				new DefaultTableModel(
						new Object[][] { { null, null, null, null }, { null, null, null, null },
								{ null, null, null, null }, { null, null, null, null }, },
						new String[] { "ID", "PRODUCT", "PRICE", "QNTY" }));
		Table.setPreferredSize(new java.awt.Dimension(500, 400));
		jScrollPane1.setViewportView(Table);
		if (Table.getColumnModel().getColumnCount() > 0) {
			Table.getColumnModel().getColumn(0).setMaxWidth(50);
		}
		getContentPane().setLayout(null);
		getContentPane().add(jScrollPane1);

		JPanel panel = new JPanel();
		panel.setBackground(Color.BLACK);
		panel.setForeground(Color.WHITE);
		panel.setBounds(0, 0, 375, 511);
		getContentPane().add(panel);
		panel.setLayout(null);
		jLabel2 = new javax.swing.JLabel();
		jLabel2.setFont(new Font("Tahoma", Font.BOLD, 14));
		jLabel2.setBounds(25, 61, 70, 24);
		panel.add(jLabel2);
		jLabel2.setForeground(Color.WHITE);

		jLabel2.setText("Product");

		Product = new javax.swing.JTextField();
		Product.setBounds(25, 88, 252, 39);
		panel.add(Product);
		jLabel3 = new javax.swing.JLabel();
		jLabel3.setFont(new Font("Tahoma", Font.BOLD, 14));
		jLabel3.setBounds(25, 138, 50, 14);
		panel.add(jLabel3);
		jLabel3.setForeground(Color.WHITE);

		jLabel3.setText("Price");
		Price = new javax.swing.JTextField();
		Price.setBounds(25, 163, 252, 39);
		panel.add(Price);
		jLabel4 = new javax.swing.JLabel();
		jLabel4.setFont(new Font("Tahoma", Font.BOLD, 14));
		jLabel4.setBounds(25, 213, 70, 24);
		panel.add(jLabel4);
		jLabel4.setForeground(Color.WHITE);

		jLabel4.setText("Qnty");
		Qnty = new javax.swing.JTextField();
		Qnty.setBounds(25, 238, 252, 39);
		panel.add(Qnty);
		submit = new javax.swing.JButton();
		submit.setFont(new Font("Tahoma", Font.BOLD, 14));
		submit.setBounds(10, 288, 85, 37);
		panel.add(submit);

		submit.setText("Create");
		update = new javax.swing.JButton();
		update.setFont(new Font("Tahoma", Font.BOLD, 14));
		update.setBounds(104, 288, 85, 37);
		panel.add(update);

		update.setText("Update");
		delete = new javax.swing.JButton();
		delete.setFont(new Font("Tahoma", Font.BOLD, 14));
		delete.setBounds(196, 288, 82, 37);
		panel.add(delete);

		delete.setText("Delete");
		Clear = new javax.swing.JButton();
		Clear.setFont(new Font("Tahoma", Font.BOLD, 14));
		Clear.setBounds(290, 288, 75, 37);
		panel.add(Clear);

		Clear.setText("Clear");
		jLabel5 = new javax.swing.JLabel();
		jLabel5.setFont(new Font("Tahoma", Font.BOLD, 14));
		jLabel5.setBounds(25, 346, 121, 24);
		panel.add(jLabel5);
		jLabel5.setForeground(Color.WHITE);

		jLabel5.setText("Search By ID");
		serachData = new javax.swing.JTextField();
		serachData.setBounds(25, 372, 252, 39);
		panel.add(serachData);
		searchBtn = new javax.swing.JButton();
		searchBtn.setFont(new Font("Tahoma", Font.BOLD, 14));
		searchBtn.setBounds(290, 373, 75, 37);
		panel.add(searchBtn);

		searchBtn.setText("Find");
		
		JButton tableupdate = new JButton();
		tableupdate.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				loadData();
				
				
			}
		});
		tableupdate.setText("Refresh");
		tableupdate.setFont(new Font("Tahoma", Font.BOLD, 11));
		tableupdate.setBounds(137, 445, 85, 31);
		panel.add(tableupdate);

		JLabel lblNewLabel = new JLabel("Store Stock Details");
		lblNewLabel.setFont(new Font("Tempus Sans ITC", Font.BOLD, 26));
		lblNewLabel.setBounds(436, 29, 262, 35);
		getContentPane().add(lblNewLabel);
		searchBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				searchBtnActionPerformed(evt);
			}
		});

		serachData.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				serachDataActionPerformed(evt);
			}
		});
		Clear.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				ClearActionPerformed(evt);
			}
		});
		delete.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				deleteActionPerformed(evt);
			}
		});
		update.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				updateActionPerformed(evt);
			}
		});
		submit.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				submitActionPerformed(evt);
			}
		});

		Qnty.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				QntyActionPerformed(evt);
			}
		});

		Price.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				PriceActionPerformed(evt);
			}
		});

		Product.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				ProductActionPerformed(evt);
			}
		});

		pack();
	}

	private void ProductActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_fNameActionPerformed
		// TODO add your handling code here:
	}

	private void PriceActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_lNameActionPerformed
		// TODO add your handling code here:
	}

	private void QntyActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_emailActionPerformed
		// TODO add your handling code here:
	}

	public void loadData() {
		try {
			Class.forName("com.mysql.cj.jdbc.Driver");

			String url = "jdbc:MySQL://localhost:3306/reg";
			String user = "root";
			String pass = "root";

			Connection con = DriverManager.getConnection(url, user, pass);
			Statement st = con.createStatement();

			DefaultTableModel model = new DefaultTableModel(new String[] { "ID", "PRODUCT", "PRICE", "QNTY" }, 0);

			Table.setModel(model);
			String sql = "SELECT * FROM store";

			ResultSet rs = st.executeQuery(sql);
			String i, p, pri, q;
			while (rs.next()) {
				i = rs.getString("id");
				p = rs.getString("product");
				pri = rs.getString("price");
				q = rs.getString("qnty");
				model.addRow(new Object[] { i, p, pri, q });
			}
		} catch (Exception e) {
			System.out.println("Error " + e.getMessage());
		}

	}

	private void submitActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_submitActionPerformed
		String pd, pr, qn, query;

		// connect to database
		try {
			Class.forName("com.mysql.cj.jdbc.Driver");

			String url = "jdbc:MySQL://localhost:3306/reg";
			String user = "root";
			String pass = "root";

			Connection con = DriverManager.getConnection(url, user, pass);
			Statement st = con.createStatement();

			if ("".equals(Product.getText())) {

				JOptionPane.showMessageDialog(new JFrame(), "Product is require", "Dialog", JOptionPane.ERROR_MESSAGE);

			} else if ("".equals(Price.getText())) {

				JOptionPane.showMessageDialog(new JFrame(), "Price is require", "Dialog", JOptionPane.ERROR_MESSAGE);
			} else if ("".equals(Qnty.getText())) {

				JOptionPane.showMessageDialog(new JFrame(), "Quantity is require", "Dialog", JOptionPane.ERROR_MESSAGE);
			} else {
				pd = Product.getText();
				pr = Price.getText();
				qn = Qnty.getText();
				query = "INSERT INTO store (product, price, qnty) " + "VALUES ('" + pd + "','" + pr + "','" + qn + "')";

				st.executeUpdate(query);
				Product.setText("");
				Price.setText("");
				Qnty.setText("");
				showMessageDialog(null, "Successfully registered.");
				loadData();
				con.close();
			}
		} catch (Exception e) {
			System.out.println("Error " + e.getMessage());

		}

	}// create ActionPerformed

	private void updateActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_updateActionPerformed
		String ID;
		int notFound = 0;
		String fN, lN, em;
		try {
			Class.forName("com.mysql.cj.jdbc.Driver");

			String url = "jdbc:MySQL://localhost:3306/reg";
			String user = "root";
			String pass = "root";

			Connection con = DriverManager.getConnection(url, user, pass);
			Statement st = con.createStatement();

			ID = serachData.getText();
			if ("".equals(ID)) {
				JOptionPane.showMessageDialog(new JFrame(), "ID is require", "Dialog", JOptionPane.ERROR_MESSAGE);
			} else {
				String sql = "SELECT * FROM store WHERE id=" + ID;
				ResultSet rs = st.executeQuery(sql);
				while (rs.next()) {
					notFound = 1;
					fN = Product.getText();
					lN = Price.getText();
					em = Qnty.getText();
					String sql2 = "UPDATE store SET product='" + fN + "', price='" + lN + "', qnty='" + em
							+ "'  WHERE id=" + ID;
					st.executeUpdate(sql2);
					loadData();
					con.close();
				}
				if (notFound == 0) {
					JOptionPane.showMessageDialog(new JFrame(), "invalid ID", "Dialog", JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch (Exception e) {
			System.out.println("Error " + e.getMessage());

		}
	}// updateActionPerformed

	private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_searchBtnActionPerformed
		String ID;
		int notFound = 0;
		try {
			Class.forName("com.mysql.cj.jdbc.Driver");

			String url = "jdbc:MySQL://localhost:3306/reg";
			String user = "root";
			String pass = "root";

			Connection con = DriverManager.getConnection(url, user, pass);
			Statement st = con.createStatement();

			ID = serachData.getText();
			if ("".equals(ID)) {
				JOptionPane.showMessageDialog(new JFrame(), "ID is require", "Dialog", JOptionPane.ERROR_MESSAGE);
			} else {
				String sql = "SELECT * FROM store WHERE id=" + ID;
				ResultSet rs = st.executeQuery(sql);
				while (rs.next()) {
					Product.setText(rs.getString("product"));
					Price.setText(rs.getString("price"));
					Qnty.setText(rs.getString("qnty"));
					notFound = 1;

					con.close();
				}
				if (notFound == 0) {
					JOptionPane.showMessageDialog(new JFrame(), "invalid ID", "Dialog", JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch (Exception e) {
			System.out.println("Error " + e.getMessage());

		}

	}// searchBtnActionPerformed

	private void deleteActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_deleteActionPerformed
		String ID;
		int notFound = 0;
		try {
			Class.forName("com.mysql.cj.jdbc.Driver");

			String url = "jdbc:MySQL://localhost:3306/reg";
			String user = "root";
			String pass = "root";

			Connection con = DriverManager.getConnection(url, user, pass);
			Statement st = con.createStatement();

			ID = serachData.getText();
			if ("".equals(ID)) {
				JOptionPane.showMessageDialog(new JFrame(), "ID is require", "Dialog", JOptionPane.ERROR_MESSAGE);
			} else {
				String sql = "SELECT * FROM store WHERE id=" + ID;
				ResultSet rs = st.executeQuery(sql);
				while (rs.next()) {
					notFound = 1;
					String sql2 = "DELETE FROM store WHERE id=" + ID;
					st.executeUpdate(sql2);
					loadData();
					con.close();
				}
				if (notFound == 0) {
					JOptionPane.showMessageDialog(new JFrame(), "invalid ID", "Dialog", JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch (Exception e) {
			System.out.println("Error " + e.getMessage());

		}
	}// deleteActionPerformed

	private void serachDataActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_serachDataActionPerformed
		// TODO add your handling code here:
	}

	private void ClearActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_ClearActionPerformed
		Product.setText("");
		Price.setText("");
		Qnty.setText("");
	}// ClearActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {

		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(Store.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(Store.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(Store.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(Store.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}

		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {

				Store x = new Store();
				x.loadData();
				x.setLocationRelativeTo(null);
				x.setVisible(true);
			}
		});
	}

	// Variables declaration
	private javax.swing.JButton Clear;
	private javax.swing.JTable Table;
	private javax.swing.JButton delete;
	private javax.swing.JTextField Qnty;
	private javax.swing.JTextField Product;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTextField Price;
	private javax.swing.JButton searchBtn;
	private javax.swing.JTextField serachData;
	private javax.swing.JButton submit;
	private javax.swing.JButton update;
}